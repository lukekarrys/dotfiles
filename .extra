function clone() {
    p
    mkd $1
    if [ -d "$2" ]; then
        cd $2
        git pull
    else
        hub clone $1/$2
        cd $2
    fi
}

function p() {
    if [ -z "$1" ]; then
        cd ~/projects
    else
        cd ~/projects
        if [ -d "$1" ]; then
            cd $1
        else
            exact=$(find . -maxdepth 2 -type d | grep "/$1$" | head -n1)
            if [ -d "$exact" ]; then
                cd $exact
            else
                cd $(find . -maxdepth 2 -type d | grep "$1" | head -n1)
            fi
        fi
    fi
}

function trep() {
    if [ -z "$1" ]; then
        tree -aCd -L 2 ~/projects
    else
        tree -aCd -L 1 ~/projects/$1
    fi
}

export MARKPATH=$HOME/.marks
function jump {
    cd -P "$MARKPATH/$1" 2>/dev/null || echo "No such mark: $1"
}
function mark {
    mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}
function unmark {
    rm -i "$MARKPATH/$1"
}
function marks {
    \ls -l "$MARKPATH" | tail -n +2 | sed 's/  / /g' | cut -d' ' -f9- | awk -F ' -> ' '{printf "%-10s -> %s\n", $1, $2}'
}

function sayall {
    for voice in Agnes Kathy Princess Vicki Victoria Bruce Fred Junior Ralph Albert "Bad News" Bahh Bells Boing Bubbles Cellos Deranged "Good News" Hysterical "Pipe Organ" Trinoids Whisper Zarvox; do
        echo $voice
        say -v "$voice" "$@"
    done
}

# remove voices that have their own cadence
function sayalls {
    for voice in Agnes Kathy Princess Vicki Victoria Bruce Fred Junior Ralph Albert Bahh Boing Bubbles Deranged Trinoids Whisper Zarvox; do
        say -v "$voice" "$@" &
    done
}

# Mov to gif
# Usage `gifify <input.mov> [--good]
# Thanks @SlexAxton https://gist.github.com/SlexAxton/4989674
function gifify() {
  if [[ -n "$1" ]]; then
    GIF="${1%.*}.gif"
    if [[ $2 == '--good' ]]; then
      ffmpeg -i $1 -r 10 -vcodec png out-static-%05d.png
      time convert -verbose +dither -layers Optimize -resize 600x600\> out-static*.png  GIF:- | gifsicle --colors 128 --delay=5 --loop --optimize=3 --multifile - > $GIF
      rm out-static*.png
    else
      ffmpeg -i $1 -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > $GIF
    fi
  else
    echo "proper usage: gifify <input_movie.mov>. You DO need to include extension."
  fi
}

# npm
alias patch='git pull && npm version patch && git push && git push --tags && npm publish'
alias minor='git pull && npm version minor && git push && git push --tags && npm publish'
alias major='git pull && npm version major && git push && git push --tags && npm publish'

aa_256 ()
{
( x=`tput op` y=`printf %$((${COLUMNS}-6))s`;
for i in {0..256};
do
o=00$i;
echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;
done )
}

# update annoying jshint gutter plugin which resets itself all the time
alias subl-jshint-gutter='cp -r ${HOME}/projects/lukekarrys/dotfiles/init/JSHint\ Gutter/* ~/Library/Application\ Support/Sublime\ Text*/Packages/JSHint\ Gutter/'
