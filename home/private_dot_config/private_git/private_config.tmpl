[alias]
	# checkout
	co = checkout
	# Push
	p = push
	po = "!git push origin"
	pob = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	# status
	s = status
	ss = status -s
	# add and commit
	ca = !git add -A && git commit -avm
	ugh = !git add . && git commit --amend --no-edit
	# rebase
	reb = "!f() { if [ \"$1\" -ge 7 ]; then git rebase -i \"$1\"~1; else git rebase -i HEAD~\"$1\"; fi; }; f"
	# diff
	df = diff
	df-nolock = "!f() { git diff \"$@\" \":(exclude)package-lock.json\" \":(exclude)*.lock\" }; f"
	# log
	l = "!f() { git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit \"$@\"; }; f"
	lb = "!f() { local branch=\"$1\"; shift; git l \"$@\" HEAD..\"$branch\"; }; f"
	# switch or create
	go = "!f() { local branch=\"$1\"; if git show-ref --verify --quiet refs/heads/$branch; then git switch \"$branch\"; else git switch -c \"$branch\"; fi; }; f"

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]
	excludesfile = {{ joinPath .xdg.config "git/ignore" }}
	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space
	# Make `git rebase` safer on OS X
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false
	editor = code -r -w
	pager = diff-so-fancy | less --tabs=2 -RFX
	untrackedCache = true

[remote "origin"]
	prune = true

[diff]
	# Detect copies as well as renames
	renames = copies

[help]
	autocorrect = 1

[branch]
	autosetupmerge = true

[push]
	default = simple

[user]
	name = {{ .name }}
	email = {{ .email }}
	signingkey = {{ template "password" list "GitHub SSH and Commit Signing Key" .onepassword.personal "public_key" }}

[commit]
	gpgsign = true

[tag]
	gpgsign = true

[fetch]
	prune = true

[pull]
	rebase = true

[gpg]
  format = ssh

[gpg "ssh"]
  program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"

[init]
	defaultBranch = main

[feature]
	manyFiles = true

[filter "lfs"]
	clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
