###########################
#
# Fish
#
###########################
fish_config theme choose "Dracula Official"
set -g fish_greeting

###########################
#
# Aliases / Abbreviations / Functions
#
###########################

# Go to directories
alias dl="cd {{ .dirs.home }}/Downloads"
alias dt="cd {{ .dirs.home }}/Desktop"

# ls
alias l="eza --classify --long --no-permissions --no-user --time-style long-iso"
alias la="eza --classify --long --no-permissions --no-user --time-style long-iso --all"

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Dates
alias dateslug='date "+%Y-%m-%d %H:%M"'
alias dateiso='date -u +"%Y-%m-%dT%H:%M:%S.%NZ"'

# Dotfiles
alias dotedit="chezmoi edit"

# Shortened program names
alias cz='chezmoi'

# Git aliases defined in gitconfig but as fish abbr
abbr -a g 'git'
{{- $gitAliases := list "co" "p" "po" "pob" "s" "ss" "ca" "ugh" "reb" "df" "l" "lb" "go" }}
{{- range $gitAliases }}
abbr -a g{{ . }} 'git {{ . }}'
{{- end }}

# Use git + diff-so-fancy colored diff when available
if type -q git
  function diff
    git --no-pager diff --no-index --color $argv | diff-so-fancy
  end
end

###########################
#
# Global Environment Variables
#
###########################

# These are stored in chezmoi because they are also passed to scripts.
# This is because they need to be set so tools installed by brew, etc
# write config/data/cache/state to the correct places. This will always
# contain XDG_* variables but also contains special vars for tools that
# do not follow the XDG spec. Most of the other ones were reported by xdg-ninja.
{{- range $key, $value := .chezmoi.config.scriptEnv }}
set -gx {{ $key }} "{{ $value }}"
{{- end }}

# Other tool env vars that do not need to be set at chezmoi template time
set -gx NODE_REPL_HISTORY {{ joinPath .xdg.state "node_repl_history" | quote }}
set -gx TS_NODE_HISTORY {{ joinPath .xdg.state "ts_node_repl_history" | quote }}
set -gx PKG_CACHE_PATH {{ joinPath .xdg.cache "pkg-cache" | quote }}
set -gx WGETRC {{ joinPath .xdg.cache "wgetrc" | quote }}

# Homebrew
set -gx HOMEBREW_NO_ENV_HINTS "1"
set -gx HOMEBREW_BUNDLE_DUMP_NO_VSCODE "1"
set -gx HOMEBREW_NO_AUTO_UPDATE "1"
set -gx HOMEBREW_BUNDLE_FILE "{{ joinPath .xdg.config "packages/Brewfile" }}"

# User
set -gx DEFAULT_USER "{{ .username }}"

# Git credentials
set -gx GIT_AUTHOR_NAME "{{ .name }}"
set -gx GIT_COMMITTER_NAME "{{ .name }}"
set -gx GIT_AUTHOR_EMAIL "{{ .email }}"
set -gx GIT_COMMITTER_EMAIL "{{ .email }}"

# dont show % sign when ctrl-c'ing
set -gx PROMPT_EOL_MARK ""

# SSH
{{ if .onepassword.ssh -}}
set -gx SSH_AUTH_SOCK ~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
{{- end }}

# VSCode as the default editor
set -gx EDITOR "code -r -w"

# Prefer US English and use UTF-8
set -gx LANG "en_US.UTF-8"
set -gx LC_ALL "en_US.UTF-8"

# Always enable colored `grep` output
set -gx GREP_OPTIONS "--color=auto"

###########################
#
# PATH / MANPATH
#
###########################

# Homebrew
{{- $brew := joinPath .dirs.brewBin "brew" }}
{{ output $brew "shellenv" "fish" | trim }}

# Make sure MANPATH is always set
# https://github.com/fish-shell/fish-shell/issues/2090#issuecomment-421833616
set -q MANPATH || set MANPATH ''

# always use newer coreutils from homebrew
# this might have adverse effects if other tools expect older versions
# but it hasn't bitten me yet and its nicer to have. fingers crossed
fish_add_path --global "{{ .dirs.brew }}/opt/coreutils/libexec/gnubin"
fish_add_path --global "{{ .dirs.brew }}/opt/findutils/libexec/gnubin"
set -gxp MANPATH $MANPATH "{{ .dirs.brew }}/opt/coreutils/libexec/gnuman"
set -gxp MANPATH $MANPATH "{{ .dirs.brew }}/opt/findutils/libexec/gnuman"

# trash, installed from homebrew
fish_add_path --global "{{ .dirs.brew }}/opt/trash/bin"

# bins that are written by dotfiles repo
fish_add_path --global "{{ .dirs.home }}/.bin"

# Global bins installed from registry.npmjs.org
fish_add_path --global "{{ .npmGlobal.path }}"

# Ruby
# I don't have much need for anything beyond a single, modern ruby
# so use one from homebrew. If this changes, use a ruby version manager
fish_add_path --global "{{ .dirs.brew }}/opt/ruby/bin"

# Python
# Use python3.9 as the default python. Python is mostly used by node-gyp
# and this version works well for that.
fish_add_path --global "{{ .dirs.brew }}/opt/python@3.9/libexec/bin"

# TODO
# gem environment gemdir
# go env GOPATH

###########################
#
# Tools
#
###########################

# Atuin
{{- $atuin := joinPath .dirs.brewBin "atuin" }}
{{ output $atuin "init" "fish" "--disable-up-arrow" | trim }}

# Node
# fnm is designed to run on every shell init
fnm env --shell=fish --fnm-dir {{ joinPath .xdg.data "fnm" | quote }} | source

# Rust
{{- $cargo := joinPath .xdg.data "cargo/env.fish" }}
{{ include $cargo | trim }}

# Prompt
function starship_transient_prompt_func
  starship module character
end
{{- $starship := joinPath .dirs.brewBin "starship" }}
{{ output $starship "init" "fish" "--print-full-init" | trim }}
enable_transience
