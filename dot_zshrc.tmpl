(( ${+commands[direnv]} )) && emulate zsh -c "$(direnv export zsh)"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

(( ${+commands[direnv]} )) && emulate zsh -c "$(direnv hook zsh)"

export ZSH_DISABLE_COMPFIX="true"
export DISABLE_AUTO_UPDATE="true"
export ZSH_CUSTOM={{ .chezmoi.homeDir }}/.oh-my-zsh-custom

export DEFAULT_USER="{{ .chezmoi.username }}"
export PROJECTS_DIR="{{ .chezmoi.homeDir }}/projects"
export ZSH={{ .chezmoi.homeDir }}/.oh-my-zsh

# Git credentials
export GIT_AUTHOR_NAME="{{ .name }}"
export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
export GIT_AUTHOR_EMAIL="{{ .email }}"
export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"

source $ZSH_CUSTOM/plugins/powerlevel10k/powerlevel10k.zsh-theme

_zsh_autosuggest_strategy_atuin() {
  suggestion=$(atuin search --cmd-only --limit=1 --filter-mode=directory --search-mode=prefix "$1" || atuin search --cmd-only --limit=1 --filter-mode=global --search-mode=prefix "$1")
}
ZSH_AUTOSUGGEST_STRATEGY=(atuin completion)
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=21

# This speeds up pasting w/ autosuggest
# https://github.com/zsh-users/zsh-autosuggestions/issues/238
pasteinit() {
  OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
  zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?
}
pastefinish() {
  zle -N self-insert $OLD_SELF_INSERT
}
zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish

# # https://github.com/zsh-users/zsh-autosuggestions/issues/351
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(bracketed-paste accept-line)

# fzf-tab
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'

plugins=(
  my-git
  projects
  fzf-tab
  zsh-autosuggestions
  zsh-syntax-highlighting
)

export HISTFILESIZE=1
export HISTSIZE=1
export HISTFILE=~/.zsh_history2

# dont show % sign when ctrl-c'ing
export PROMPT_EOL_MARK=""

export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"

PATH="/usr/local/opt/fzf/bin:$PATH"
PATH="/usr/local/bin:/usr/local/sbin:$PATH"
PATH="/usr/local/opt/python@3.9/libexec/bin:$PATH"
PATH="/usr/local/opt/ruby/bin:$PATH"
PATH="`gem environment gemdir`/bin:$PATH"
PATH="`go env GOPATH`/bin:$PATH"
PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
PATH="{{ .globalJsBin }}:$PATH"
PATH="{{ .chezmoi.homeDir }}/.dotfiles-bin:$PATH"
PATH="/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH"
export PATH="$PATH"

source $ZSH/oh-my-zsh.sh

# Load the shell dotfiles
for file in {{ .chezmoi.homeDir }}/.{exports,aliases,functions}; do
    [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

source "/usr/local/opt/fzf/shell/completion.zsh" 2> /dev/null
source "/usr/local/opt/fzf/shell/key-bindings.zsh"

eval "$(atuin init zsh)"
eval "$(fnm env)"
source ~/.p10k.zsh